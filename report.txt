Backend:

We modulize the backend and put all quantum circuit evaluation functions into "Operators.elm".
We implemented the basic Single Qubit Quantum gates (Pauli-X, Pauli-Z, Hadamard). 
And we combine any two of them to form some of the 2 qubit quantum gates.
We also implemented Controlled-Not Gate, Controlled-Z Gate and Controlled-Hadamard Gate.
We then extend this to 3-Qubit Gates, combining any 3 of the single qubit gates, or a combination of single qubit gate on top of 2 Qubit Controlled Gates.
Due to time constraint, we do not support double Control Gate like Toffoli Gate at the moment.
So we more or less reached the maximum amount of freedom we planned for the users to have over designing their quantum circuits.

The interface is to take in an array of string tuples from the frontend model, translate it into a list of Matrix that represents the unitary operations quantum gate have on the qubits, 
and recursively doing matrix multiplication to get the result.

A 2 Qubit gate that is a combination of single qubit gates is taking the tensor product of the two single qubit gate matrices. 
We didn't implement the tensor product in general but we implement a direct computation taking two 2*2 matrices and compute their tensor product (a 4*4 matrix).

A 3 Qubit gate is represented by an 8*8 matrix, which is the tensor product of three 2*2 matrices representing the single qubit gates, or the tensor product between 4*4 (representing certain Control gates) and 2*2 matrices.

Special Thanks to Paul's feedback: Originally (in part2 submission) we have done this using compound typing in elm and the code was quite lengthy and complicated. We were not in the mood to temper with Matrix multiplication and Tensor Product in elm, but Paul suggested we could give it a try and we end up with the solution we have now.

Due to the nature of functional programming and the non-existence of tensor product library, the Elm language isn't the best friend of Tensor product after all. So, I have to do some unholy 64 entries matrix by hand, and do so multiple times for edge cases.
The result is rewarding though, as we allow a great deal of freedom for the user to build their own 2 or 3 Qubit Quantum Circuit.

Frontend:
